package com.example.demo;

import java.io.IOException;
import java.io.InputStream;

import org.springframework.http.HttpInputMessage;
import org.springframework.http.HttpOutputMessage;
import org.springframework.http.MediaType;
import org.springframework.http.converter.AbstractHttpMessageConverter;
import org.springframework.http.converter.HttpMessageNotReadableException;
import org.springframework.http.converter.HttpMessageNotWritableException;

public class UserMessageConverter extends AbstractHttpMessageConverter<Employee>
{
	public UserMessageConverter()
	{
		super(new MediaType("Test","Employee"));
	}
	@Override
	protected boolean supports(Class<?> clazz) 
	{
		return false;
	}
	@Override
	protected Employee readInternal(Class<? extends Employee> clazz, HttpInputMessage inputMessage)
			throws IOException, HttpMessageNotReadableException 
	{
		String Requestmessage=toEmployeemessage(inputMessage.getBody());
		int i=Requestmessage.indexOf("\n");
		if(i==1)
		{
			throw new HttpMessageNotReadableException("No first line found", inputMessage);
		}
		return null;
	}
	private String toEmployeemessage(InputStream body) 
	{
		return null;
	}
	@Override
	protected void writeInternal(Employee t, HttpOutputMessage outputMessage)
			throws IOException, HttpMessageNotWritableException 
	{
		Employee.class.isAssignableFrom(getClass())
	}
}
