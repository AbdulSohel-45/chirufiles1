package com.example.demo;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.hateoas.EntityModel;
import org.springframework.hateoas.server.mvc.WebMvcLinkBuilder;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/Hateoas")
public class HateousController
{
	@Autowired
	DaoInterface inter;
	@RequestMapping(path="/getEmployees")
	
	public List<Employee> getEmployees()
	{
		return (List<Employee>) inter.findAll();
	}
	
	@GetMapping(path="/getEmployeeHat/{id}")
	public EntityModel<Employee> getEmployeeById(@PathVariable int id)
	{
		Employee employee=inter.findById(id).get();
		EntityModel<Employee> ent=EntityModel.of(employee);
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(this.getClass()).getEmployees()).withRel("getEmployees"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).memo()).withRel("memo"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).delEmployee(id)).withRel("delEmployee"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).deleteEmployee()).withRel("deleteEmployee"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).addEmployee(employee)).withRel("addEmployee"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).updateEmployee(employee)).withRel("updateEmployee"));
		ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).info()).withRel("info"));
		//ent.add(WebMvcLinkBuilder.linkTo(WebMvcLinkBuilder.methodOn(ControllerMy.class).done()).withRel("done"));
		
		return ent;
		
	}
}
